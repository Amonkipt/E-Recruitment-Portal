//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace E_Recruitment_Portal.RiskCard {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RiskCard_Binding", Namespace="urn:microsoft-dynamics-schemas/page/riskcard")]
    public partial class RiskCard_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadByRecIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUpdatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecIdFromKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_ExistingRiskControlOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_RiskKRIsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_RiskDriversOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_RiskMitigationProposeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RiskCard_Service() {
            this.Url = global::E_Recruitment_Portal.Properties.Settings.Default.E_Recruitment_Portal_RiskCard_RiskCard_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReadCompletedEventHandler ReadCompleted;
        
        /// <remarks/>
        public event ReadByRecIdCompletedEventHandler ReadByRecIdCompleted;
        
        /// <remarks/>
        public event ReadMultipleCompletedEventHandler ReadMultipleCompleted;
        
        /// <remarks/>
        public event IsUpdatedCompletedEventHandler IsUpdatedCompleted;
        
        /// <remarks/>
        public event GetRecIdFromKeyCompletedEventHandler GetRecIdFromKeyCompleted;
        
        /// <remarks/>
        public event CreateCompletedEventHandler CreateCompleted;
        
        /// <remarks/>
        public event CreateMultipleCompletedEventHandler CreateMultipleCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event UpdateMultipleCompletedEventHandler UpdateMultipleCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event Delete_ExistingRiskControlCompletedEventHandler Delete_ExistingRiskControlCompleted;
        
        /// <remarks/>
        public event Delete_RiskKRIsCompletedEventHandler Delete_RiskKRIsCompleted;
        
        /// <remarks/>
        public event Delete_RiskDriversCompletedEventHandler Delete_RiskDriversCompleted;
        
        /// <remarks/>
        public event Delete_RiskMitigationProposeCompletedEventHandler Delete_RiskMitigationProposeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/riskcard:Read", RequestNamespace="urn:microsoft-dynamics-schemas/page/riskcard", ResponseElementName="Read_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/riskcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RiskCard")]
        public RiskCard Read(string No) {
            object[] results = this.Invoke("Read", new object[] {
                        No});
            return ((RiskCard)(results[0]));
        }
        
        /// <remarks/>
        public void ReadAsync(string No) {
            this.ReadAsync(No, null);
        }
        
        /// <remarks/>
        public void ReadAsync(string No, object userState) {
            if ((this.ReadOperationCompleted == null)) {
                this.ReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadOperationCompleted);
            }
            this.InvokeAsync("Read", new object[] {
                        No}, this.ReadOperationCompleted, userState);
        }
        
        private void OnReadOperationCompleted(object arg) {
            if ((this.ReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadCompleted(this, new ReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/riskcard:ReadByRecId", RequestNamespace="urn:microsoft-dynamics-schemas/page/riskcard", ResponseElementName="ReadByRecId_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/riskcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RiskCard")]
        public RiskCard ReadByRecId(string recId) {
            object[] results = this.Invoke("ReadByRecId", new object[] {
                        recId});
            return ((RiskCard)(results[0]));
        }
        
        /// <remarks/>
        public void ReadByRecIdAsync(string recId) {
            this.ReadByRecIdAsync(recId, null);
        }
        
        /// <remarks/>
        public void ReadByRecIdAsync(string recId, object userState) {
            if ((this.ReadByRecIdOperationCompleted == null)) {
                this.ReadByRecIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadByRecIdOperationCompleted);
            }
            this.InvokeAsync("ReadByRecId", new object[] {
                        recId}, this.ReadByRecIdOperationCompleted, userState);
        }
        
        private void OnReadByRecIdOperationCompleted(object arg) {
            if ((this.ReadByRecIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadByRecIdCompleted(this, new ReadByRecIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/riskcard:ReadMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/riskcard", ResponseElementName="ReadMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/riskcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReadMultiple_Result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public RiskCard[] ReadMultiple([System.Xml.Serialization.XmlElementAttribute("filter")] RiskCard_Filter[] filter, string bookmarkKey, int setSize) {
            object[] results = this.Invoke("ReadMultiple", new object[] {
                        filter,
                        bookmarkKey,
                        setSize});
            return ((RiskCard[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadMultipleAsync(RiskCard_Filter[] filter, string bookmarkKey, int setSize) {
            this.ReadMultipleAsync(filter, bookmarkKey, setSize, null);
        }
        
        /// <remarks/>
        public void ReadMultipleAsync(RiskCard_Filter[] filter, string bookmarkKey, int setSize, object userState) {
            if ((this.ReadMultipleOperationCompleted == null)) {
                this.ReadMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadMultipleOperationCompleted);
            }
            this.InvokeAsync("ReadMultiple", new object[] {
                        filter,
                        bookmarkKey,
                        setSize}, this.ReadMultipleOperationCompleted, userState);
        }
        
        private void OnReadMultipleOperationCompleted(object arg) {
            if ((this.ReadMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadMultipleCompleted(this, new ReadMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/riskcard:IsUpdated", RequestNamespace="urn:microsoft-dynamics-schemas/page/riskcard", ResponseElementName="IsUpdated_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/riskcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("IsUpdated_Result")]
        public bool IsUpdated(string Key) {
            object[] results = this.Invoke("IsUpdated", new object[] {
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUpdatedAsync(string Key) {
            this.IsUpdatedAsync(Key, null);
        }
        
        /// <remarks/>
        public void IsUpdatedAsync(string Key, object userState) {
            if ((this.IsUpdatedOperationCompleted == null)) {
                this.IsUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUpdatedOperationCompleted);
            }
            this.InvokeAsync("IsUpdated", new object[] {
                        Key}, this.IsUpdatedOperationCompleted, userState);
        }
        
        private void OnIsUpdatedOperationCompleted(object arg) {
            if ((this.IsUpdatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUpdatedCompleted(this, new IsUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/riskcard:GetRecIdFromKey", RequestNamespace="urn:microsoft-dynamics-schemas/page/riskcard", ResponseElementName="GetRecIdFromKey_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/riskcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetRecIdFromKey_Result")]
        public string GetRecIdFromKey(string Key) {
            object[] results = this.Invoke("GetRecIdFromKey", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecIdFromKeyAsync(string Key) {
            this.GetRecIdFromKeyAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetRecIdFromKeyAsync(string Key, object userState) {
            if ((this.GetRecIdFromKeyOperationCompleted == null)) {
                this.GetRecIdFromKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecIdFromKeyOperationCompleted);
            }
            this.InvokeAsync("GetRecIdFromKey", new object[] {
                        Key}, this.GetRecIdFromKeyOperationCompleted, userState);
        }
        
        private void OnGetRecIdFromKeyOperationCompleted(object arg) {
            if ((this.GetRecIdFromKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecIdFromKeyCompleted(this, new GetRecIdFromKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/riskcard:Create", RequestNamespace="urn:microsoft-dynamics-schemas/page/riskcard", ResponseElementName="Create_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/riskcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Create(ref RiskCard RiskCard) {
            object[] results = this.Invoke("Create", new object[] {
                        RiskCard});
            RiskCard = ((RiskCard)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAsync(RiskCard RiskCard) {
            this.CreateAsync(RiskCard, null);
        }
        
        /// <remarks/>
        public void CreateAsync(RiskCard RiskCard, object userState) {
            if ((this.CreateOperationCompleted == null)) {
                this.CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOperationCompleted);
            }
            this.InvokeAsync("Create", new object[] {
                        RiskCard}, this.CreateOperationCompleted, userState);
        }
        
        private void OnCreateOperationCompleted(object arg) {
            if ((this.CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCompleted(this, new CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/riskcard:CreateMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/riskcard", ResponseElementName="CreateMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/riskcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateMultiple([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref RiskCard[] RiskCard_List) {
            object[] results = this.Invoke("CreateMultiple", new object[] {
                        RiskCard_List});
            RiskCard_List = ((RiskCard[])(results[0]));
        }
        
        /// <remarks/>
        public void CreateMultipleAsync(RiskCard[] RiskCard_List) {
            this.CreateMultipleAsync(RiskCard_List, null);
        }
        
        /// <remarks/>
        public void CreateMultipleAsync(RiskCard[] RiskCard_List, object userState) {
            if ((this.CreateMultipleOperationCompleted == null)) {
                this.CreateMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMultipleOperationCompleted);
            }
            this.InvokeAsync("CreateMultiple", new object[] {
                        RiskCard_List}, this.CreateMultipleOperationCompleted, userState);
        }
        
        private void OnCreateMultipleOperationCompleted(object arg) {
            if ((this.CreateMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMultipleCompleted(this, new CreateMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/riskcard:Update", RequestNamespace="urn:microsoft-dynamics-schemas/page/riskcard", ResponseElementName="Update_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/riskcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update(ref RiskCard RiskCard) {
            object[] results = this.Invoke("Update", new object[] {
                        RiskCard});
            RiskCard = ((RiskCard)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAsync(RiskCard RiskCard) {
            this.UpdateAsync(RiskCard, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(RiskCard RiskCard, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        RiskCard}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/riskcard:UpdateMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/riskcard", ResponseElementName="UpdateMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/riskcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateMultiple([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref RiskCard[] RiskCard_List) {
            object[] results = this.Invoke("UpdateMultiple", new object[] {
                        RiskCard_List});
            RiskCard_List = ((RiskCard[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMultipleAsync(RiskCard[] RiskCard_List) {
            this.UpdateMultipleAsync(RiskCard_List, null);
        }
        
        /// <remarks/>
        public void UpdateMultipleAsync(RiskCard[] RiskCard_List, object userState) {
            if ((this.UpdateMultipleOperationCompleted == null)) {
                this.UpdateMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMultipleOperationCompleted);
            }
            this.InvokeAsync("UpdateMultiple", new object[] {
                        RiskCard_List}, this.UpdateMultipleOperationCompleted, userState);
        }
        
        private void OnUpdateMultipleOperationCompleted(object arg) {
            if ((this.UpdateMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMultipleCompleted(this, new UpdateMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/riskcard:Delete", RequestNamespace="urn:microsoft-dynamics-schemas/page/riskcard", ResponseElementName="Delete_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/riskcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Delete_Result")]
        public bool Delete(string Key) {
            object[] results = this.Invoke("Delete", new object[] {
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(string Key) {
            this.DeleteAsync(Key, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string Key, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        Key}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/riskcard:Delete_ExistingRiskControl", RequestNamespace="urn:microsoft-dynamics-schemas/page/riskcard", ResponseElementName="Delete_ExistingRiskControl_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/riskcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Delete_ExistingRiskControl_Result")]
        public bool Delete_ExistingRiskControl(string ExistingRiskControl_Key) {
            object[] results = this.Invoke("Delete_ExistingRiskControl", new object[] {
                        ExistingRiskControl_Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_ExistingRiskControlAsync(string ExistingRiskControl_Key) {
            this.Delete_ExistingRiskControlAsync(ExistingRiskControl_Key, null);
        }
        
        /// <remarks/>
        public void Delete_ExistingRiskControlAsync(string ExistingRiskControl_Key, object userState) {
            if ((this.Delete_ExistingRiskControlOperationCompleted == null)) {
                this.Delete_ExistingRiskControlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_ExistingRiskControlOperationCompleted);
            }
            this.InvokeAsync("Delete_ExistingRiskControl", new object[] {
                        ExistingRiskControl_Key}, this.Delete_ExistingRiskControlOperationCompleted, userState);
        }
        
        private void OnDelete_ExistingRiskControlOperationCompleted(object arg) {
            if ((this.Delete_ExistingRiskControlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_ExistingRiskControlCompleted(this, new Delete_ExistingRiskControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/riskcard:Delete_RiskKRIs", RequestNamespace="urn:microsoft-dynamics-schemas/page/riskcard", ResponseElementName="Delete_RiskKRIs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/riskcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Delete_RiskKRIs_Result")]
        public bool Delete_RiskKRIs(string RiskKRIs_Key) {
            object[] results = this.Invoke("Delete_RiskKRIs", new object[] {
                        RiskKRIs_Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_RiskKRIsAsync(string RiskKRIs_Key) {
            this.Delete_RiskKRIsAsync(RiskKRIs_Key, null);
        }
        
        /// <remarks/>
        public void Delete_RiskKRIsAsync(string RiskKRIs_Key, object userState) {
            if ((this.Delete_RiskKRIsOperationCompleted == null)) {
                this.Delete_RiskKRIsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_RiskKRIsOperationCompleted);
            }
            this.InvokeAsync("Delete_RiskKRIs", new object[] {
                        RiskKRIs_Key}, this.Delete_RiskKRIsOperationCompleted, userState);
        }
        
        private void OnDelete_RiskKRIsOperationCompleted(object arg) {
            if ((this.Delete_RiskKRIsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_RiskKRIsCompleted(this, new Delete_RiskKRIsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/riskcard:Delete_RiskDrivers", RequestNamespace="urn:microsoft-dynamics-schemas/page/riskcard", ResponseElementName="Delete_RiskDrivers_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/riskcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Delete_RiskDrivers_Result")]
        public bool Delete_RiskDrivers(string RiskDrivers_Key) {
            object[] results = this.Invoke("Delete_RiskDrivers", new object[] {
                        RiskDrivers_Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_RiskDriversAsync(string RiskDrivers_Key) {
            this.Delete_RiskDriversAsync(RiskDrivers_Key, null);
        }
        
        /// <remarks/>
        public void Delete_RiskDriversAsync(string RiskDrivers_Key, object userState) {
            if ((this.Delete_RiskDriversOperationCompleted == null)) {
                this.Delete_RiskDriversOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_RiskDriversOperationCompleted);
            }
            this.InvokeAsync("Delete_RiskDrivers", new object[] {
                        RiskDrivers_Key}, this.Delete_RiskDriversOperationCompleted, userState);
        }
        
        private void OnDelete_RiskDriversOperationCompleted(object arg) {
            if ((this.Delete_RiskDriversCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_RiskDriversCompleted(this, new Delete_RiskDriversCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/riskcard:Delete_RiskMitigationPropose", RequestNamespace="urn:microsoft-dynamics-schemas/page/riskcard", ResponseElementName="Delete_RiskMitigationPropose_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/riskcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Delete_RiskMitigationPropose_Result")]
        public bool Delete_RiskMitigationPropose(string RiskMitigationPropose_Key) {
            object[] results = this.Invoke("Delete_RiskMitigationPropose", new object[] {
                        RiskMitigationPropose_Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_RiskMitigationProposeAsync(string RiskMitigationPropose_Key) {
            this.Delete_RiskMitigationProposeAsync(RiskMitigationPropose_Key, null);
        }
        
        /// <remarks/>
        public void Delete_RiskMitigationProposeAsync(string RiskMitigationPropose_Key, object userState) {
            if ((this.Delete_RiskMitigationProposeOperationCompleted == null)) {
                this.Delete_RiskMitigationProposeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_RiskMitigationProposeOperationCompleted);
            }
            this.InvokeAsync("Delete_RiskMitigationPropose", new object[] {
                        RiskMitigationPropose_Key}, this.Delete_RiskMitigationProposeOperationCompleted, userState);
        }
        
        private void OnDelete_RiskMitigationProposeOperationCompleted(object arg) {
            if ((this.Delete_RiskMitigationProposeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_RiskMitigationProposeCompleted(this, new Delete_RiskMitigationProposeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/riskcard")]
    public partial class RiskCard {
        
        private string keyField;
        
        private string noField;
        
        private System.DateTime date_CreatedField;
        
        private bool date_CreatedFieldSpecified;
        
        private string created_ByField;
        
        private string employee_NoField;
        
        private string employee_NameField;
        
        private string shortcut_Dimension_1_CodeField;
        
        private string shortcut_Dimension_2_CodeField;
        
        private System.DateTime date_IdentifiedField;
        
        private bool date_IdentifiedFieldSpecified;
        
        private Type typeField;
        
        private bool typeFieldSpecified;
        
        private string risk_DescriptionField;
        
        private Risk_Opportunity_Assessment risk_Opportunity_AssessmentField;
        
        private bool risk_Opportunity_AssessmentFieldSpecified;
        
        private string risk_RegionField;
        
        private string risk_Region_NameField;
        
        private string additional_mitigation_controlsField;
        
        private string hOD_User_IDField;
        
        private System.DateTime review_DateField;
        
        private bool review_DateFieldSpecified;
        
        private Document_Status document_StatusField;
        
        private bool document_StatusFieldSpecified;
        
        private bool mark_OkayField;
        
        private bool mark_OkayFieldSpecified;
        
        private string risk_Description2Field;
        
        private string rejection_ReasonField;
        
        private string linked_IncidentField;
        
        private string linked_Incident_DescriptionField;
        
        private string risk_CategoryField;
        
        private string risk_Category_DescriptionField;
        
        private Risk_Acceptance_Decision risk_Acceptance_DecisionField;
        
        private bool risk_Acceptance_DecisionFieldSpecified;
        
        private decimal value_after_ControlField;
        
        private bool value_after_ControlFieldSpecified;
        
        private decimal control_Risk_ProbabilityField;
        
        private bool control_Risk_ProbabilityFieldSpecified;
        
        private decimal control_Evaluation_LikelihoodField;
        
        private bool control_Evaluation_LikelihoodFieldSpecified;
        
        private string control_Risk_LikelihoodField;
        
        private decimal control_Evaluation_ImpactField;
        
        private bool control_Evaluation_ImpactFieldSpecified;
        
        private string control_Risk_ImpactField;
        
        private decimal control_Risk_L__IField;
        
        private bool control_Risk_L__IFieldSpecified;
        
        private Control_RAG_Status control_RAG_StatusField;
        
        private bool control_RAG_StatusFieldSpecified;
        
        private decimal value_at_Risk_AmountField;
        
        private bool value_at_Risk_AmountFieldSpecified;
        
        private decimal risk_ProbabilityField;
        
        private bool risk_ProbabilityFieldSpecified;
        
        private decimal risk_Likelihood_ValueField;
        
        private bool risk_Likelihood_ValueFieldSpecified;
        
        private string risk_LikelihoodField;
        
        private decimal risk_Impact_ValueField;
        
        private bool risk_Impact_ValueFieldSpecified;
        
        private string risk_ImpactField;
        
        private decimal risk_L__IField;
        
        private bool risk_L__IFieldSpecified;
        
        private RAG_Status rAG_StatusField;
        
        private bool rAG_StatusFieldSpecified;
        
        private decimal residual_ValueField;
        
        private bool residual_ValueFieldSpecified;
        
        private decimal residual_Risk_LikelihoodField;
        
        private bool residual_Risk_LikelihoodFieldSpecified;
        
        private string residual_Risk_Likelihood_CatField;
        
        private decimal residual_Likelihood_ImpactField;
        
        private bool residual_Likelihood_ImpactFieldSpecified;
        
        private string residual_Risk_ImpactField;
        
        private decimal residual_Risk_L__IField;
        
        private bool residual_Risk_L__IFieldSpecified;
        
        private Residual_RAG_Status residual_RAG_StatusField;
        
        private bool residual_RAG_StatusFieldSpecified;
        
        private Existing_Risk_Controls[] existingRiskControlField;
        
        private Risk_KRI_s[] riskKRIsField;
        
        private Risk_Drivers[] riskDriversField;
        
        private Risk_Mitigation_Propose[] riskMitigationProposeField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string No {
            get {
                return this.noField;
            }
            set {
                this.noField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Date_Created {
            get {
                return this.date_CreatedField;
            }
            set {
                this.date_CreatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Date_CreatedSpecified {
            get {
                return this.date_CreatedFieldSpecified;
            }
            set {
                this.date_CreatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Created_By {
            get {
                return this.created_ByField;
            }
            set {
                this.created_ByField = value;
            }
        }
        
        /// <remarks/>
        public string Employee_No {
            get {
                return this.employee_NoField;
            }
            set {
                this.employee_NoField = value;
            }
        }
        
        /// <remarks/>
        public string Employee_Name {
            get {
                return this.employee_NameField;
            }
            set {
                this.employee_NameField = value;
            }
        }
        
        /// <remarks/>
        public string Shortcut_Dimension_1_Code {
            get {
                return this.shortcut_Dimension_1_CodeField;
            }
            set {
                this.shortcut_Dimension_1_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Shortcut_Dimension_2_Code {
            get {
                return this.shortcut_Dimension_2_CodeField;
            }
            set {
                this.shortcut_Dimension_2_CodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Date_Identified {
            get {
                return this.date_IdentifiedField;
            }
            set {
                this.date_IdentifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Date_IdentifiedSpecified {
            get {
                return this.date_IdentifiedFieldSpecified;
            }
            set {
                this.date_IdentifiedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Type Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Risk_Description {
            get {
                return this.risk_DescriptionField;
            }
            set {
                this.risk_DescriptionField = value;
            }
        }
        
        /// <remarks/>
        public Risk_Opportunity_Assessment Risk_Opportunity_Assessment {
            get {
                return this.risk_Opportunity_AssessmentField;
            }
            set {
                this.risk_Opportunity_AssessmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Risk_Opportunity_AssessmentSpecified {
            get {
                return this.risk_Opportunity_AssessmentFieldSpecified;
            }
            set {
                this.risk_Opportunity_AssessmentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Risk_Region {
            get {
                return this.risk_RegionField;
            }
            set {
                this.risk_RegionField = value;
            }
        }
        
        /// <remarks/>
        public string Risk_Region_Name {
            get {
                return this.risk_Region_NameField;
            }
            set {
                this.risk_Region_NameField = value;
            }
        }
        
        /// <remarks/>
        public string Additional_mitigation_controls {
            get {
                return this.additional_mitigation_controlsField;
            }
            set {
                this.additional_mitigation_controlsField = value;
            }
        }
        
        /// <remarks/>
        public string HOD_User_ID {
            get {
                return this.hOD_User_IDField;
            }
            set {
                this.hOD_User_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Review_Date {
            get {
                return this.review_DateField;
            }
            set {
                this.review_DateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Review_DateSpecified {
            get {
                return this.review_DateFieldSpecified;
            }
            set {
                this.review_DateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Document_Status Document_Status {
            get {
                return this.document_StatusField;
            }
            set {
                this.document_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Document_StatusSpecified {
            get {
                return this.document_StatusFieldSpecified;
            }
            set {
                this.document_StatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Mark_Okay {
            get {
                return this.mark_OkayField;
            }
            set {
                this.mark_OkayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Mark_OkaySpecified {
            get {
                return this.mark_OkayFieldSpecified;
            }
            set {
                this.mark_OkayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Risk_Description2 {
            get {
                return this.risk_Description2Field;
            }
            set {
                this.risk_Description2Field = value;
            }
        }
        
        /// <remarks/>
        public string Rejection_Reason {
            get {
                return this.rejection_ReasonField;
            }
            set {
                this.rejection_ReasonField = value;
            }
        }
        
        /// <remarks/>
        public string Linked_Incident {
            get {
                return this.linked_IncidentField;
            }
            set {
                this.linked_IncidentField = value;
            }
        }
        
        /// <remarks/>
        public string Linked_Incident_Description {
            get {
                return this.linked_Incident_DescriptionField;
            }
            set {
                this.linked_Incident_DescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Risk_Category {
            get {
                return this.risk_CategoryField;
            }
            set {
                this.risk_CategoryField = value;
            }
        }
        
        /// <remarks/>
        public string Risk_Category_Description {
            get {
                return this.risk_Category_DescriptionField;
            }
            set {
                this.risk_Category_DescriptionField = value;
            }
        }
        
        /// <remarks/>
        public Risk_Acceptance_Decision Risk_Acceptance_Decision {
            get {
                return this.risk_Acceptance_DecisionField;
            }
            set {
                this.risk_Acceptance_DecisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Risk_Acceptance_DecisionSpecified {
            get {
                return this.risk_Acceptance_DecisionFieldSpecified;
            }
            set {
                this.risk_Acceptance_DecisionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Value_after_Control {
            get {
                return this.value_after_ControlField;
            }
            set {
                this.value_after_ControlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Value_after_ControlSpecified {
            get {
                return this.value_after_ControlFieldSpecified;
            }
            set {
                this.value_after_ControlFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Control_Risk_Probability {
            get {
                return this.control_Risk_ProbabilityField;
            }
            set {
                this.control_Risk_ProbabilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Control_Risk_ProbabilitySpecified {
            get {
                return this.control_Risk_ProbabilityFieldSpecified;
            }
            set {
                this.control_Risk_ProbabilityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Control_Evaluation_Likelihood {
            get {
                return this.control_Evaluation_LikelihoodField;
            }
            set {
                this.control_Evaluation_LikelihoodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Control_Evaluation_LikelihoodSpecified {
            get {
                return this.control_Evaluation_LikelihoodFieldSpecified;
            }
            set {
                this.control_Evaluation_LikelihoodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Control_Risk_Likelihood {
            get {
                return this.control_Risk_LikelihoodField;
            }
            set {
                this.control_Risk_LikelihoodField = value;
            }
        }
        
        /// <remarks/>
        public decimal Control_Evaluation_Impact {
            get {
                return this.control_Evaluation_ImpactField;
            }
            set {
                this.control_Evaluation_ImpactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Control_Evaluation_ImpactSpecified {
            get {
                return this.control_Evaluation_ImpactFieldSpecified;
            }
            set {
                this.control_Evaluation_ImpactFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Control_Risk_Impact {
            get {
                return this.control_Risk_ImpactField;
            }
            set {
                this.control_Risk_ImpactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Control_Risk_L_*_I")]
        public decimal Control_Risk_L__I {
            get {
                return this.control_Risk_L__IField;
            }
            set {
                this.control_Risk_L__IField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Control_Risk_L__ISpecified {
            get {
                return this.control_Risk_L__IFieldSpecified;
            }
            set {
                this.control_Risk_L__IFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Control_RAG_Status Control_RAG_Status {
            get {
                return this.control_RAG_StatusField;
            }
            set {
                this.control_RAG_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Control_RAG_StatusSpecified {
            get {
                return this.control_RAG_StatusFieldSpecified;
            }
            set {
                this.control_RAG_StatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Value_at_Risk_Amount {
            get {
                return this.value_at_Risk_AmountField;
            }
            set {
                this.value_at_Risk_AmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Value_at_Risk_AmountSpecified {
            get {
                return this.value_at_Risk_AmountFieldSpecified;
            }
            set {
                this.value_at_Risk_AmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Risk_Probability {
            get {
                return this.risk_ProbabilityField;
            }
            set {
                this.risk_ProbabilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Risk_ProbabilitySpecified {
            get {
                return this.risk_ProbabilityFieldSpecified;
            }
            set {
                this.risk_ProbabilityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Risk_Likelihood_Value {
            get {
                return this.risk_Likelihood_ValueField;
            }
            set {
                this.risk_Likelihood_ValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Risk_Likelihood_ValueSpecified {
            get {
                return this.risk_Likelihood_ValueFieldSpecified;
            }
            set {
                this.risk_Likelihood_ValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Risk_Likelihood {
            get {
                return this.risk_LikelihoodField;
            }
            set {
                this.risk_LikelihoodField = value;
            }
        }
        
        /// <remarks/>
        public decimal Risk_Impact_Value {
            get {
                return this.risk_Impact_ValueField;
            }
            set {
                this.risk_Impact_ValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Risk_Impact_ValueSpecified {
            get {
                return this.risk_Impact_ValueFieldSpecified;
            }
            set {
                this.risk_Impact_ValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Risk_Impact {
            get {
                return this.risk_ImpactField;
            }
            set {
                this.risk_ImpactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Risk_L_*_I")]
        public decimal Risk_L__I {
            get {
                return this.risk_L__IField;
            }
            set {
                this.risk_L__IField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Risk_L__ISpecified {
            get {
                return this.risk_L__IFieldSpecified;
            }
            set {
                this.risk_L__IFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public RAG_Status RAG_Status {
            get {
                return this.rAG_StatusField;
            }
            set {
                this.rAG_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RAG_StatusSpecified {
            get {
                return this.rAG_StatusFieldSpecified;
            }
            set {
                this.rAG_StatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Residual_Value {
            get {
                return this.residual_ValueField;
            }
            set {
                this.residual_ValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Residual_ValueSpecified {
            get {
                return this.residual_ValueFieldSpecified;
            }
            set {
                this.residual_ValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Residual_Risk_Likelihood {
            get {
                return this.residual_Risk_LikelihoodField;
            }
            set {
                this.residual_Risk_LikelihoodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Residual_Risk_LikelihoodSpecified {
            get {
                return this.residual_Risk_LikelihoodFieldSpecified;
            }
            set {
                this.residual_Risk_LikelihoodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Residual_Risk_Likelihood_Cat {
            get {
                return this.residual_Risk_Likelihood_CatField;
            }
            set {
                this.residual_Risk_Likelihood_CatField = value;
            }
        }
        
        /// <remarks/>
        public decimal Residual_Likelihood_Impact {
            get {
                return this.residual_Likelihood_ImpactField;
            }
            set {
                this.residual_Likelihood_ImpactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Residual_Likelihood_ImpactSpecified {
            get {
                return this.residual_Likelihood_ImpactFieldSpecified;
            }
            set {
                this.residual_Likelihood_ImpactFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Residual_Risk_Impact {
            get {
                return this.residual_Risk_ImpactField;
            }
            set {
                this.residual_Risk_ImpactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Residual_Risk_L_*_I")]
        public decimal Residual_Risk_L__I {
            get {
                return this.residual_Risk_L__IField;
            }
            set {
                this.residual_Risk_L__IField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Residual_Risk_L__ISpecified {
            get {
                return this.residual_Risk_L__IFieldSpecified;
            }
            set {
                this.residual_Risk_L__IFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Residual_RAG_Status Residual_RAG_Status {
            get {
                return this.residual_RAG_StatusField;
            }
            set {
                this.residual_RAG_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Residual_RAG_StatusSpecified {
            get {
                return this.residual_RAG_StatusFieldSpecified;
            }
            set {
                this.residual_RAG_StatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Existing_Risk_Controls[] ExistingRiskControl {
            get {
                return this.existingRiskControlField;
            }
            set {
                this.existingRiskControlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Risk_KRI_s[] RiskKRIs {
            get {
                return this.riskKRIsField;
            }
            set {
                this.riskKRIsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Risk_Drivers[] RiskDrivers {
            get {
                return this.riskDriversField;
            }
            set {
                this.riskDriversField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Risk_Mitigation_Propose[] RiskMitigationPropose {
            get {
                return this.riskMitigationProposeField;
            }
            set {
                this.riskMitigationProposeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/riskcard")]
    public enum Type {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        Risk,
        
        /// <remarks/>
        Risk_Opportunity,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/riskcard")]
    public enum Risk_Opportunity_Assessment {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        Enhance,
        
        /// <remarks/>
        Exploit,
        
        /// <remarks/>
        Share,
        
        /// <remarks/>
        Do_Nothing,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/riskcard")]
    public enum Document_Status {
        
        /// <remarks/>
        New,
        
        /// <remarks/>
        Champion,
        
        /// <remarks/>
        Officer,
        
        /// <remarks/>
        HOD,
        
        /// <remarks/>
        Champion_2,
        
        /// <remarks/>
        Closed,
        
        /// <remarks/>
        Project_Manager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/riskcard")]
    public enum Risk_Acceptance_Decision {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        Treat,
        
        /// <remarks/>
        Tolerate,
        
        /// <remarks/>
        Terminate,
        
        /// <remarks/>
        Transfer,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/riskcard")]
    public enum Control_RAG_Status {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        VERY_HIGH,
        
        /// <remarks/>
        HIGH,
        
        /// <remarks/>
        AMBER,
        
        /// <remarks/>
        LOW,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/riskcard")]
    public enum RAG_Status {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        VERY_HIGH,
        
        /// <remarks/>
        HIGH,
        
        /// <remarks/>
        AMBER,
        
        /// <remarks/>
        LOW,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/riskcard")]
    public enum Residual_RAG_Status {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        VERY_HIGH,
        
        /// <remarks/>
        HIGH,
        
        /// <remarks/>
        AMBER,
        
        /// <remarks/>
        LOW,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/riskcard")]
    public partial class Existing_Risk_Controls {
        
        private string keyField;
        
        private Type_2 typeField;
        
        private bool typeFieldSpecified;
        
        private int line_NoField;
        
        private bool line_NoFieldSpecified;
        
        private string descriptionField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public Type_2 Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Line_No {
            get {
                return this.line_NoField;
            }
            set {
                this.line_NoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Line_NoSpecified {
            get {
                return this.line_NoFieldSpecified;
            }
            set {
                this.line_NoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/riskcard")]
    public enum Type_2 {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        Drivers,
        
        /// <remarks/>
        Mitigation_Proposal,
        
        /// <remarks/>
        Effects,
        
        /// <remarks/>
        Value_Explanation,
        
        /// <remarks/>
        Existing_Control,
        
        /// <remarks/>
        KRI_s,
        
        /// <remarks/>
        Response,
        
        /// <remarks/>
        M_x0026_E,
        
        /// <remarks/>
        Risk_Category,
        
        /// <remarks/>
        Risk_Opportunity,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/riskcard")]
    public partial class RiskCard_Filter {
        
        private RiskCard_Fields fieldField;
        
        private string criteriaField;
        
        /// <remarks/>
        public RiskCard_Fields Field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        public string Criteria {
            get {
                return this.criteriaField;
            }
            set {
                this.criteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/riskcard")]
    public enum RiskCard_Fields {
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        Date_Created,
        
        /// <remarks/>
        Created_By,
        
        /// <remarks/>
        Employee_No,
        
        /// <remarks/>
        Employee_Name,
        
        /// <remarks/>
        Shortcut_Dimension_1_Code,
        
        /// <remarks/>
        Shortcut_Dimension_2_Code,
        
        /// <remarks/>
        Date_Identified,
        
        /// <remarks/>
        Type,
        
        /// <remarks/>
        Risk_Description,
        
        /// <remarks/>
        Risk_Opportunity_Assessment,
        
        /// <remarks/>
        Risk_Region,
        
        /// <remarks/>
        Risk_Region_Name,
        
        /// <remarks/>
        Additional_mitigation_controls,
        
        /// <remarks/>
        HOD_User_ID,
        
        /// <remarks/>
        Review_Date,
        
        /// <remarks/>
        Document_Status,
        
        /// <remarks/>
        Mark_Okay,
        
        /// <remarks/>
        Risk_Description2,
        
        /// <remarks/>
        Rejection_Reason,
        
        /// <remarks/>
        Linked_Incident,
        
        /// <remarks/>
        Linked_Incident_Description,
        
        /// <remarks/>
        Risk_Category,
        
        /// <remarks/>
        Risk_Category_Description,
        
        /// <remarks/>
        Risk_Acceptance_Decision,
        
        /// <remarks/>
        Value_after_Control,
        
        /// <remarks/>
        Control_Risk_Probability,
        
        /// <remarks/>
        Control_Evaluation_Likelihood,
        
        /// <remarks/>
        Control_Risk_Likelihood,
        
        /// <remarks/>
        Control_Evaluation_Impact,
        
        /// <remarks/>
        Control_Risk_Impact,
        
        /// <remarks/>
        Control_Risk_L__x002A__I,
        
        /// <remarks/>
        Control_RAG_Status,
        
        /// <remarks/>
        Value_at_Risk_Amount,
        
        /// <remarks/>
        Risk_Probability,
        
        /// <remarks/>
        Risk_Likelihood_Value,
        
        /// <remarks/>
        Risk_Likelihood,
        
        /// <remarks/>
        Risk_Impact_Value,
        
        /// <remarks/>
        Risk_Impact,
        
        /// <remarks/>
        Risk_L__x002A__I,
        
        /// <remarks/>
        RAG_Status,
        
        /// <remarks/>
        Residual_Value,
        
        /// <remarks/>
        Residual_Risk_Likelihood,
        
        /// <remarks/>
        Residual_Risk_Likelihood_Cat,
        
        /// <remarks/>
        Residual_Likelihood_Impact,
        
        /// <remarks/>
        Residual_Risk_Impact,
        
        /// <remarks/>
        Residual_Risk_L__x002A__I,
        
        /// <remarks/>
        Residual_RAG_Status,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/riskcard")]
    public partial class Risk_Mitigation_Propose {
        
        private string keyField;
        
        private string descriptionField;
        
        private int line_NoField;
        
        private bool line_NoFieldSpecified;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int Line_No {
            get {
                return this.line_NoField;
            }
            set {
                this.line_NoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Line_NoSpecified {
            get {
                return this.line_NoFieldSpecified;
            }
            set {
                this.line_NoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/riskcard")]
    public partial class Risk_Drivers {
        
        private string keyField;
        
        private string descriptionField;
        
        private int line_NoField;
        
        private bool line_NoFieldSpecified;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int Line_No {
            get {
                return this.line_NoField;
            }
            set {
                this.line_NoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Line_NoSpecified {
            get {
                return this.line_NoFieldSpecified;
            }
            set {
                this.line_NoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/riskcard")]
    public partial class Risk_KRI_s {
        
        private string keyField;
        
        private string kRIField;
        
        private string descriptionField;
        
        private decimal targetField;
        
        private bool targetFieldSpecified;
        
        private decimal toleranceField;
        
        private bool toleranceFieldSpecified;
        
        private decimal appetiteField;
        
        private bool appetiteFieldSpecified;
        
        private System.DateTime date_of_CompletionField;
        
        private bool date_of_CompletionFieldSpecified;
        
        private Update_Frequency update_FrequencyField;
        
        private bool update_FrequencyFieldSpecified;
        
        private int line_NoField;
        
        private bool line_NoFieldSpecified;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string KRI {
            get {
                return this.kRIField;
            }
            set {
                this.kRIField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public decimal Target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TargetSpecified {
            get {
                return this.targetFieldSpecified;
            }
            set {
                this.targetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Tolerance {
            get {
                return this.toleranceField;
            }
            set {
                this.toleranceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToleranceSpecified {
            get {
                return this.toleranceFieldSpecified;
            }
            set {
                this.toleranceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Appetite {
            get {
                return this.appetiteField;
            }
            set {
                this.appetiteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AppetiteSpecified {
            get {
                return this.appetiteFieldSpecified;
            }
            set {
                this.appetiteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Date_of_Completion {
            get {
                return this.date_of_CompletionField;
            }
            set {
                this.date_of_CompletionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Date_of_CompletionSpecified {
            get {
                return this.date_of_CompletionFieldSpecified;
            }
            set {
                this.date_of_CompletionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Update_Frequency Update_Frequency {
            get {
                return this.update_FrequencyField;
            }
            set {
                this.update_FrequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Update_FrequencySpecified {
            get {
                return this.update_FrequencyFieldSpecified;
            }
            set {
                this.update_FrequencyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Line_No {
            get {
                return this.line_NoField;
            }
            set {
                this.line_NoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Line_NoSpecified {
            get {
                return this.line_NoFieldSpecified;
            }
            set {
                this.line_NoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/riskcard")]
    public enum Update_Frequency {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        Daily,
        
        /// <remarks/>
        Weekly,
        
        /// <remarks/>
        Monthly,
        
        /// <remarks/>
        Quaterly,
        
        /// <remarks/>
        Semi_Annually,
        
        /// <remarks/>
        Annually,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReadCompletedEventHandler(object sender, ReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RiskCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReadByRecIdCompletedEventHandler(object sender, ReadByRecIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadByRecIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadByRecIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RiskCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReadMultipleCompletedEventHandler(object sender, ReadMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RiskCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsUpdatedCompletedEventHandler(object sender, IsUpdatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRecIdFromKeyCompletedEventHandler(object sender, GetRecIdFromKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecIdFromKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecIdFromKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateCompletedEventHandler(object sender, CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RiskCard RiskCard {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateMultipleCompletedEventHandler(object sender, CreateMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RiskCard[] RiskCard_List {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RiskCard RiskCard {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateMultipleCompletedEventHandler(object sender, UpdateMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RiskCard[] RiskCard_List {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Delete_ExistingRiskControlCompletedEventHandler(object sender, Delete_ExistingRiskControlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_ExistingRiskControlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_ExistingRiskControlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Delete_RiskKRIsCompletedEventHandler(object sender, Delete_RiskKRIsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_RiskKRIsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_RiskKRIsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Delete_RiskDriversCompletedEventHandler(object sender, Delete_RiskDriversCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_RiskDriversCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_RiskDriversCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Delete_RiskMitigationProposeCompletedEventHandler(object sender, Delete_RiskMitigationProposeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_RiskMitigationProposeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_RiskMitigationProposeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591