//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace E_Recruitment_Portal.OnlinePortal {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OnlinePortal_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal")]
    public partial class OnlinePortal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ApproveRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AttachDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateAgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelAppraisalApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelLeaveApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelLoanApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelPaymentsApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelTrainingRequestApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelTransportApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmFundsReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateInternalRequestLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelegateRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportPicturesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmpIDFromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileExtensionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPictureStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserIDFromEmpIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportPicturesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LeaveExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback MemberStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintAppraisalObjectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintIncidentOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintLeaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintLoanScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintP9OperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintPaySlipOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintPaymentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintProcurementDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintRequisitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintSurveyOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintTrainingOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintTransportOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendIncidentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendLeaveApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendLoanApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPaymentsApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendReviewAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendRiskSurveyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendRiskOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTrainingRequestApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTransportApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPictureStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateApprovalEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadApplicantDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadProcurementDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadRFQDocumentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OnlinePortal() {
            this.Url = global::E_Recruitment_Portal.Properties.Settings.Default.E_Recruitment_Portal_OnlinePortal_OnlinePortal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ApproveRequestCompletedEventHandler ApproveRequestCompleted;
        
        /// <remarks/>
        public event AttachDocumentCompletedEventHandler AttachDocumentCompleted;
        
        /// <remarks/>
        public event CalculateAgeCompletedEventHandler CalculateAgeCompleted;
        
        /// <remarks/>
        public event CancelAppraisalApprovalCompletedEventHandler CancelAppraisalApprovalCompleted;
        
        /// <remarks/>
        public event CancelLeaveApprovalCompletedEventHandler CancelLeaveApprovalCompleted;
        
        /// <remarks/>
        public event CancelLoanApprovalCompletedEventHandler CancelLoanApprovalCompleted;
        
        /// <remarks/>
        public event CancelPaymentsApprovalCompletedEventHandler CancelPaymentsApprovalCompleted;
        
        /// <remarks/>
        public event CancelRequisitionApprovalCompletedEventHandler CancelRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event CancelTrainingRequestApprovalCompletedEventHandler CancelTrainingRequestApprovalCompleted;
        
        /// <remarks/>
        public event CancelTransportApprovalCompletedEventHandler CancelTransportApprovalCompleted;
        
        /// <remarks/>
        public event ConfirmFundsReceiptCompletedEventHandler ConfirmFundsReceiptCompleted;
        
        /// <remarks/>
        public event CopyDocumentCompletedEventHandler CopyDocumentCompleted;
        
        /// <remarks/>
        public event CreateInternalRequestLineCompletedEventHandler CreateInternalRequestLineCompleted;
        
        /// <remarks/>
        public event DelegateRequestCompletedEventHandler DelegateRequestCompleted;
        
        /// <remarks/>
        public event ExecuteCompletedEventHandler ExecuteCompleted;
        
        /// <remarks/>
        public event ExportPicturesCompletedEventHandler ExportPicturesCompleted;
        
        /// <remarks/>
        public event FnAttachmentCompletedEventHandler FnAttachmentCompleted;
        
        /// <remarks/>
        public event GetEmpIDFromUserIDCompletedEventHandler GetEmpIDFromUserIDCompleted;
        
        /// <remarks/>
        public event GetFileExtensionCompletedEventHandler GetFileExtensionCompleted;
        
        /// <remarks/>
        public event GetPictureStreamCompletedEventHandler GetPictureStreamCompleted;
        
        /// <remarks/>
        public event GetUserIDFromEmpIDCompletedEventHandler GetUserIDFromEmpIDCompleted;
        
        /// <remarks/>
        public event ImportPicturesCompletedEventHandler ImportPicturesCompleted;
        
        /// <remarks/>
        public event LeaveExistsCompletedEventHandler LeaveExistsCompleted;
        
        /// <remarks/>
        public event MemberStatementCompletedEventHandler MemberStatementCompleted;
        
        /// <remarks/>
        public event PrintAppraisalObjectivesCompletedEventHandler PrintAppraisalObjectivesCompleted;
        
        /// <remarks/>
        public event PrintAppraisalCompletedEventHandler PrintAppraisalCompleted;
        
        /// <remarks/>
        public event PrintIncidentCompletedEventHandler PrintIncidentCompleted;
        
        /// <remarks/>
        public event PrintLeaveCompletedEventHandler PrintLeaveCompleted;
        
        /// <remarks/>
        public event PrintLoanScheduleCompletedEventHandler PrintLoanScheduleCompleted;
        
        /// <remarks/>
        public event PrintP9CompletedEventHandler PrintP9Completed;
        
        /// <remarks/>
        public event PrintPaySlipCompletedEventHandler PrintPaySlipCompleted;
        
        /// <remarks/>
        public event PrintPaymentsCompletedEventHandler PrintPaymentsCompleted;
        
        /// <remarks/>
        public event PrintProcurementDocsCompletedEventHandler PrintProcurementDocsCompleted;
        
        /// <remarks/>
        public event PrintRequisitionsCompletedEventHandler PrintRequisitionsCompleted;
        
        /// <remarks/>
        public event PrintSurveyCompletedEventHandler PrintSurveyCompleted;
        
        /// <remarks/>
        public event PrintTrainingCompletedEventHandler PrintTrainingCompleted;
        
        /// <remarks/>
        public event PrintTransportCompletedEventHandler PrintTransportCompleted;
        
        /// <remarks/>
        public event RejectRequestCompletedEventHandler RejectRequestCompleted;
        
        /// <remarks/>
        public event SendIncidentCompletedEventHandler SendIncidentCompleted;
        
        /// <remarks/>
        public event SendLeaveApprovalCompletedEventHandler SendLeaveApprovalCompleted;
        
        /// <remarks/>
        public event SendLoanApprovalCompletedEventHandler SendLoanApprovalCompleted;
        
        /// <remarks/>
        public event SendPaymentsApprovalCompletedEventHandler SendPaymentsApprovalCompleted;
        
        /// <remarks/>
        public event SendRequisitionApprovalCompletedEventHandler SendRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event SendReviewAppraisalCompletedEventHandler SendReviewAppraisalCompleted;
        
        /// <remarks/>
        public event SendRiskSurveyCompletedEventHandler SendRiskSurveyCompleted;
        
        /// <remarks/>
        public event SendRiskCompletedEventHandler SendRiskCompleted;
        
        /// <remarks/>
        public event SendTrainingRequestApprovalCompletedEventHandler SendTrainingRequestApprovalCompleted;
        
        /// <remarks/>
        public event SendTransportApprovalCompletedEventHandler SendTransportApprovalCompleted;
        
        /// <remarks/>
        public event SetPictureStreamCompletedEventHandler SetPictureStreamCompleted;
        
        /// <remarks/>
        public event SubmitApplicationCompletedEventHandler SubmitApplicationCompleted;
        
        /// <remarks/>
        public event UpdateApprovalEntriesCompletedEventHandler UpdateApprovalEntriesCompleted;
        
        /// <remarks/>
        public event UploadApplicantDocumentCompletedEventHandler UploadApplicantDocumentCompleted;
        
        /// <remarks/>
        public event UploadProcurementDocumentCompletedEventHandler UploadProcurementDocumentCompleted;
        
        /// <remarks/>
        public event UploadRFQDocumentCompletedEventHandler UploadRFQDocumentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:ApproveRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="ApproveRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApproveRequest(string documentNo, string approverID) {
            this.Invoke("ApproveRequest", new object[] {
                        documentNo,
                        approverID});
        }
        
        /// <remarks/>
        public void ApproveRequestAsync(string documentNo, string approverID) {
            this.ApproveRequestAsync(documentNo, approverID, null);
        }
        
        /// <remarks/>
        public void ApproveRequestAsync(string documentNo, string approverID, object userState) {
            if ((this.ApproveRequestOperationCompleted == null)) {
                this.ApproveRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveRequestOperationCompleted);
            }
            this.InvokeAsync("ApproveRequest", new object[] {
                        documentNo,
                        approverID}, this.ApproveRequestOperationCompleted, userState);
        }
        
        private void OnApproveRequestOperationCompleted(object arg) {
            if ((this.ApproveRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:AttachDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="AttachDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AttachDocument(string recordID, string fileName) {
            this.Invoke("AttachDocument", new object[] {
                        recordID,
                        fileName});
        }
        
        /// <remarks/>
        public void AttachDocumentAsync(string recordID, string fileName) {
            this.AttachDocumentAsync(recordID, fileName, null);
        }
        
        /// <remarks/>
        public void AttachDocumentAsync(string recordID, string fileName, object userState) {
            if ((this.AttachDocumentOperationCompleted == null)) {
                this.AttachDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAttachDocumentOperationCompleted);
            }
            this.InvokeAsync("AttachDocument", new object[] {
                        recordID,
                        fileName}, this.AttachDocumentOperationCompleted, userState);
        }
        
        private void OnAttachDocumentOperationCompleted(object arg) {
            if ((this.AttachDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AttachDocumentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:CalculateAge", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="CalculateAge_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal CalculateAge([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate) {
            object[] results = this.Invoke("CalculateAge", new object[] {
                        startDate,
                        endDate});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateAgeAsync(System.DateTime startDate, System.DateTime endDate) {
            this.CalculateAgeAsync(startDate, endDate, null);
        }
        
        /// <remarks/>
        public void CalculateAgeAsync(System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.CalculateAgeOperationCompleted == null)) {
                this.CalculateAgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateAgeOperationCompleted);
            }
            this.InvokeAsync("CalculateAge", new object[] {
                        startDate,
                        endDate}, this.CalculateAgeOperationCompleted, userState);
        }
        
        private void OnCalculateAgeOperationCompleted(object arg) {
            if ((this.CalculateAgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateAgeCompleted(this, new CalculateAgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:CancelAppraisalApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="CancelAppraisalApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelAppraisalApproval(string docNo) {
            this.Invoke("CancelAppraisalApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelAppraisalApprovalAsync(string docNo) {
            this.CancelAppraisalApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelAppraisalApprovalAsync(string docNo, object userState) {
            if ((this.CancelAppraisalApprovalOperationCompleted == null)) {
                this.CancelAppraisalApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelAppraisalApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelAppraisalApproval", new object[] {
                        docNo}, this.CancelAppraisalApprovalOperationCompleted, userState);
        }
        
        private void OnCancelAppraisalApprovalOperationCompleted(object arg) {
            if ((this.CancelAppraisalApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelAppraisalApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:CancelLeaveApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="CancelLeaveApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelLeaveApproval(string docNo) {
            this.Invoke("CancelLeaveApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelLeaveApprovalAsync(string docNo) {
            this.CancelLeaveApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelLeaveApprovalAsync(string docNo, object userState) {
            if ((this.CancelLeaveApprovalOperationCompleted == null)) {
                this.CancelLeaveApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelLeaveApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelLeaveApproval", new object[] {
                        docNo}, this.CancelLeaveApprovalOperationCompleted, userState);
        }
        
        private void OnCancelLeaveApprovalOperationCompleted(object arg) {
            if ((this.CancelLeaveApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelLeaveApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:CancelLoanApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="CancelLoanApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelLoanApproval(string docNo) {
            this.Invoke("CancelLoanApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelLoanApprovalAsync(string docNo) {
            this.CancelLoanApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelLoanApprovalAsync(string docNo, object userState) {
            if ((this.CancelLoanApprovalOperationCompleted == null)) {
                this.CancelLoanApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelLoanApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelLoanApproval", new object[] {
                        docNo}, this.CancelLoanApprovalOperationCompleted, userState);
        }
        
        private void OnCancelLoanApprovalOperationCompleted(object arg) {
            if ((this.CancelLoanApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelLoanApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:CancelPaymentsApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="CancelPaymentsApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelPaymentsApproval(string docNo) {
            object[] results = this.Invoke("CancelPaymentsApproval", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelPaymentsApprovalAsync(string docNo) {
            this.CancelPaymentsApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelPaymentsApprovalAsync(string docNo, object userState) {
            if ((this.CancelPaymentsApprovalOperationCompleted == null)) {
                this.CancelPaymentsApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPaymentsApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelPaymentsApproval", new object[] {
                        docNo}, this.CancelPaymentsApprovalOperationCompleted, userState);
        }
        
        private void OnCancelPaymentsApprovalOperationCompleted(object arg) {
            if ((this.CancelPaymentsApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPaymentsApprovalCompleted(this, new CancelPaymentsApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:CancelRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="CancelRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelRequisitionApproval(string docNo) {
            this.Invoke("CancelRequisitionApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelRequisitionApprovalAsync(string docNo) {
            this.CancelRequisitionApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelRequisitionApprovalAsync(string docNo, object userState) {
            if ((this.CancelRequisitionApprovalOperationCompleted == null)) {
                this.CancelRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelRequisitionApproval", new object[] {
                        docNo}, this.CancelRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnCancelRequisitionApprovalOperationCompleted(object arg) {
            if ((this.CancelRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelRequisitionApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:CancelTrainingRequestApprova" +
            "l", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="CancelTrainingRequestApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelTrainingRequestApproval(string docNo) {
            this.Invoke("CancelTrainingRequestApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelTrainingRequestApprovalAsync(string docNo) {
            this.CancelTrainingRequestApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelTrainingRequestApprovalAsync(string docNo, object userState) {
            if ((this.CancelTrainingRequestApprovalOperationCompleted == null)) {
                this.CancelTrainingRequestApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelTrainingRequestApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelTrainingRequestApproval", new object[] {
                        docNo}, this.CancelTrainingRequestApprovalOperationCompleted, userState);
        }
        
        private void OnCancelTrainingRequestApprovalOperationCompleted(object arg) {
            if ((this.CancelTrainingRequestApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelTrainingRequestApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:CancelTransportApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="CancelTransportApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelTransportApproval(string docNo) {
            this.Invoke("CancelTransportApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelTransportApprovalAsync(string docNo) {
            this.CancelTransportApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelTransportApprovalAsync(string docNo, object userState) {
            if ((this.CancelTransportApprovalOperationCompleted == null)) {
                this.CancelTransportApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelTransportApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelTransportApproval", new object[] {
                        docNo}, this.CancelTransportApprovalOperationCompleted, userState);
        }
        
        private void OnCancelTransportApprovalOperationCompleted(object arg) {
            if ((this.CancelTransportApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelTransportApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:ConfirmFundsReceipt", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="ConfirmFundsReceipt_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConfirmFundsReceipt(string docNo) {
            this.Invoke("ConfirmFundsReceipt", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void ConfirmFundsReceiptAsync(string docNo) {
            this.ConfirmFundsReceiptAsync(docNo, null);
        }
        
        /// <remarks/>
        public void ConfirmFundsReceiptAsync(string docNo, object userState) {
            if ((this.ConfirmFundsReceiptOperationCompleted == null)) {
                this.ConfirmFundsReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmFundsReceiptOperationCompleted);
            }
            this.InvokeAsync("ConfirmFundsReceipt", new object[] {
                        docNo}, this.ConfirmFundsReceiptOperationCompleted, userState);
        }
        
        private void OnConfirmFundsReceiptOperationCompleted(object arg) {
            if ((this.ConfirmFundsReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmFundsReceiptCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:CopyDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="CopyDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CopyDocument(string fromPath, string toPath, bool replace) {
            this.Invoke("CopyDocument", new object[] {
                        fromPath,
                        toPath,
                        replace});
        }
        
        /// <remarks/>
        public void CopyDocumentAsync(string fromPath, string toPath, bool replace) {
            this.CopyDocumentAsync(fromPath, toPath, replace, null);
        }
        
        /// <remarks/>
        public void CopyDocumentAsync(string fromPath, string toPath, bool replace, object userState) {
            if ((this.CopyDocumentOperationCompleted == null)) {
                this.CopyDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyDocumentOperationCompleted);
            }
            this.InvokeAsync("CopyDocument", new object[] {
                        fromPath,
                        toPath,
                        replace}, this.CopyDocumentOperationCompleted, userState);
        }
        
        private void OnCopyDocumentOperationCompleted(object arg) {
            if ((this.CopyDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyDocumentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:CreateInternalRequestLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="CreateInternalRequestLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int CreateInternalRequestLine(string documentNo) {
            object[] results = this.Invoke("CreateInternalRequestLine", new object[] {
                        documentNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateInternalRequestLineAsync(string documentNo) {
            this.CreateInternalRequestLineAsync(documentNo, null);
        }
        
        /// <remarks/>
        public void CreateInternalRequestLineAsync(string documentNo, object userState) {
            if ((this.CreateInternalRequestLineOperationCompleted == null)) {
                this.CreateInternalRequestLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateInternalRequestLineOperationCompleted);
            }
            this.InvokeAsync("CreateInternalRequestLine", new object[] {
                        documentNo}, this.CreateInternalRequestLineOperationCompleted, userState);
        }
        
        private void OnCreateInternalRequestLineOperationCompleted(object arg) {
            if ((this.CreateInternalRequestLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateInternalRequestLineCompleted(this, new CreateInternalRequestLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:DelegateRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="DelegateRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelegateRequest(string documentNo, string approverID) {
            this.Invoke("DelegateRequest", new object[] {
                        documentNo,
                        approverID});
        }
        
        /// <remarks/>
        public void DelegateRequestAsync(string documentNo, string approverID) {
            this.DelegateRequestAsync(documentNo, approverID, null);
        }
        
        /// <remarks/>
        public void DelegateRequestAsync(string documentNo, string approverID, object userState) {
            if ((this.DelegateRequestOperationCompleted == null)) {
                this.DelegateRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelegateRequestOperationCompleted);
            }
            this.InvokeAsync("DelegateRequest", new object[] {
                        documentNo,
                        approverID}, this.DelegateRequestOperationCompleted, userState);
        }
        
        private void OnDelegateRequestOperationCompleted(object arg) {
            if ((this.DelegateRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelegateRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:Execute", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="Execute_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Execute(string recID) {
            this.Invoke("Execute", new object[] {
                        recID});
        }
        
        /// <remarks/>
        public void ExecuteAsync(string recID) {
            this.ExecuteAsync(recID, null);
        }
        
        /// <remarks/>
        public void ExecuteAsync(string recID, object userState) {
            if ((this.ExecuteOperationCompleted == null)) {
                this.ExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteOperationCompleted);
            }
            this.InvokeAsync("Execute", new object[] {
                        recID}, this.ExecuteOperationCompleted, userState);
        }
        
        private void OnExecuteOperationCompleted(object arg) {
            if ((this.ExecuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:ExportPictures", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="ExportPictures_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExportPictures() {
            this.Invoke("ExportPictures", new object[0]);
        }
        
        /// <remarks/>
        public void ExportPicturesAsync() {
            this.ExportPicturesAsync(null);
        }
        
        /// <remarks/>
        public void ExportPicturesAsync(object userState) {
            if ((this.ExportPicturesOperationCompleted == null)) {
                this.ExportPicturesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportPicturesOperationCompleted);
            }
            this.InvokeAsync("ExportPictures", new object[0], this.ExportPicturesOperationCompleted, userState);
        }
        
        private void OnExportPicturesOperationCompleted(object arg) {
            if ((this.ExportPicturesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportPicturesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:FnAttachment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="FnAttachment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnAttachment(string link, string docName, string userName, string docType, string docNo, string attached) {
            object[] results = this.Invoke("FnAttachment", new object[] {
                        link,
                        docName,
                        userName,
                        docType,
                        docNo,
                        attached});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnAttachmentAsync(string link, string docName, string userName, string docType, string docNo, string attached) {
            this.FnAttachmentAsync(link, docName, userName, docType, docNo, attached, null);
        }
        
        /// <remarks/>
        public void FnAttachmentAsync(string link, string docName, string userName, string docType, string docNo, string attached, object userState) {
            if ((this.FnAttachmentOperationCompleted == null)) {
                this.FnAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAttachmentOperationCompleted);
            }
            this.InvokeAsync("FnAttachment", new object[] {
                        link,
                        docName,
                        userName,
                        docType,
                        docNo,
                        attached}, this.FnAttachmentOperationCompleted, userState);
        }
        
        private void OnFnAttachmentOperationCompleted(object arg) {
            if ((this.FnAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAttachmentCompleted(this, new FnAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:GetEmpIDFromUserID", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="GetEmpIDFromUserID_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetEmpIDFromUserID(string userCode) {
            object[] results = this.Invoke("GetEmpIDFromUserID", new object[] {
                        userCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmpIDFromUserIDAsync(string userCode) {
            this.GetEmpIDFromUserIDAsync(userCode, null);
        }
        
        /// <remarks/>
        public void GetEmpIDFromUserIDAsync(string userCode, object userState) {
            if ((this.GetEmpIDFromUserIDOperationCompleted == null)) {
                this.GetEmpIDFromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmpIDFromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetEmpIDFromUserID", new object[] {
                        userCode}, this.GetEmpIDFromUserIDOperationCompleted, userState);
        }
        
        private void OnGetEmpIDFromUserIDOperationCompleted(object arg) {
            if ((this.GetEmpIDFromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmpIDFromUserIDCompleted(this, new GetEmpIDFromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:GetFileExtension", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="GetFileExtension_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetFileExtension(string fileName) {
            this.Invoke("GetFileExtension", new object[] {
                        fileName});
        }
        
        /// <remarks/>
        public void GetFileExtensionAsync(string fileName) {
            this.GetFileExtensionAsync(fileName, null);
        }
        
        /// <remarks/>
        public void GetFileExtensionAsync(string fileName, object userState) {
            if ((this.GetFileExtensionOperationCompleted == null)) {
                this.GetFileExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileExtensionOperationCompleted);
            }
            this.InvokeAsync("GetFileExtension", new object[] {
                        fileName}, this.GetFileExtensionOperationCompleted, userState);
        }
        
        private void OnGetFileExtensionOperationCompleted(object arg) {
            if ((this.GetFileExtensionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileExtensionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:GetPictureStream", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="GetPictureStream_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetPictureStream(string memberNo, string path) {
            this.Invoke("GetPictureStream", new object[] {
                        memberNo,
                        path});
        }
        
        /// <remarks/>
        public void GetPictureStreamAsync(string memberNo, string path) {
            this.GetPictureStreamAsync(memberNo, path, null);
        }
        
        /// <remarks/>
        public void GetPictureStreamAsync(string memberNo, string path, object userState) {
            if ((this.GetPictureStreamOperationCompleted == null)) {
                this.GetPictureStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPictureStreamOperationCompleted);
            }
            this.InvokeAsync("GetPictureStream", new object[] {
                        memberNo,
                        path}, this.GetPictureStreamOperationCompleted, userState);
        }
        
        private void OnGetPictureStreamOperationCompleted(object arg) {
            if ((this.GetPictureStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPictureStreamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:GetUserIDFromEmpID", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="GetUserIDFromEmpID_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetUserIDFromEmpID(string empID) {
            object[] results = this.Invoke("GetUserIDFromEmpID", new object[] {
                        empID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserIDFromEmpIDAsync(string empID) {
            this.GetUserIDFromEmpIDAsync(empID, null);
        }
        
        /// <remarks/>
        public void GetUserIDFromEmpIDAsync(string empID, object userState) {
            if ((this.GetUserIDFromEmpIDOperationCompleted == null)) {
                this.GetUserIDFromEmpIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserIDFromEmpIDOperationCompleted);
            }
            this.InvokeAsync("GetUserIDFromEmpID", new object[] {
                        empID}, this.GetUserIDFromEmpIDOperationCompleted, userState);
        }
        
        private void OnGetUserIDFromEmpIDOperationCompleted(object arg) {
            if ((this.GetUserIDFromEmpIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserIDFromEmpIDCompleted(this, new GetUserIDFromEmpIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:ImportPictures", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="ImportPictures_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ImportPictures() {
            this.Invoke("ImportPictures", new object[0]);
        }
        
        /// <remarks/>
        public void ImportPicturesAsync() {
            this.ImportPicturesAsync(null);
        }
        
        /// <remarks/>
        public void ImportPicturesAsync(object userState) {
            if ((this.ImportPicturesOperationCompleted == null)) {
                this.ImportPicturesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportPicturesOperationCompleted);
            }
            this.InvokeAsync("ImportPictures", new object[0], this.ImportPicturesOperationCompleted, userState);
        }
        
        private void OnImportPicturesOperationCompleted(object arg) {
            if ((this.ImportPicturesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportPicturesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:LeaveExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="LeaveExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string LeaveExists(string empNo) {
            object[] results = this.Invoke("LeaveExists", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LeaveExistsAsync(string empNo) {
            this.LeaveExistsAsync(empNo, null);
        }
        
        /// <remarks/>
        public void LeaveExistsAsync(string empNo, object userState) {
            if ((this.LeaveExistsOperationCompleted == null)) {
                this.LeaveExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLeaveExistsOperationCompleted);
            }
            this.InvokeAsync("LeaveExists", new object[] {
                        empNo}, this.LeaveExistsOperationCompleted, userState);
        }
        
        private void OnLeaveExistsOperationCompleted(object arg) {
            if ((this.LeaveExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LeaveExistsCompleted(this, new LeaveExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:MemberStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="MemberStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MemberStatement(string file, string path, string memberNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate) {
            this.Invoke("MemberStatement", new object[] {
                        file,
                        path,
                        memberNo,
                        endDate});
        }
        
        /// <remarks/>
        public void MemberStatementAsync(string file, string path, string memberNo, System.DateTime endDate) {
            this.MemberStatementAsync(file, path, memberNo, endDate, null);
        }
        
        /// <remarks/>
        public void MemberStatementAsync(string file, string path, string memberNo, System.DateTime endDate, object userState) {
            if ((this.MemberStatementOperationCompleted == null)) {
                this.MemberStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMemberStatementOperationCompleted);
            }
            this.InvokeAsync("MemberStatement", new object[] {
                        file,
                        path,
                        memberNo,
                        endDate}, this.MemberStatementOperationCompleted, userState);
        }
        
        private void OnMemberStatementOperationCompleted(object arg) {
            if ((this.MemberStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MemberStatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:PrintAppraisalObjectives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="PrintAppraisalObjectives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintAppraisalObjectives(string appraisalNo, string path) {
            object[] results = this.Invoke("PrintAppraisalObjectives", new object[] {
                        appraisalNo,
                        path});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintAppraisalObjectivesAsync(string appraisalNo, string path) {
            this.PrintAppraisalObjectivesAsync(appraisalNo, path, null);
        }
        
        /// <remarks/>
        public void PrintAppraisalObjectivesAsync(string appraisalNo, string path, object userState) {
            if ((this.PrintAppraisalObjectivesOperationCompleted == null)) {
                this.PrintAppraisalObjectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintAppraisalObjectivesOperationCompleted);
            }
            this.InvokeAsync("PrintAppraisalObjectives", new object[] {
                        appraisalNo,
                        path}, this.PrintAppraisalObjectivesOperationCompleted, userState);
        }
        
        private void OnPrintAppraisalObjectivesOperationCompleted(object arg) {
            if ((this.PrintAppraisalObjectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintAppraisalObjectivesCompleted(this, new PrintAppraisalObjectivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:PrintAppraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="PrintAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintAppraisal(string appraisalNo, string path) {
            object[] results = this.Invoke("PrintAppraisal", new object[] {
                        appraisalNo,
                        path});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintAppraisalAsync(string appraisalNo, string path) {
            this.PrintAppraisalAsync(appraisalNo, path, null);
        }
        
        /// <remarks/>
        public void PrintAppraisalAsync(string appraisalNo, string path, object userState) {
            if ((this.PrintAppraisalOperationCompleted == null)) {
                this.PrintAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintAppraisalOperationCompleted);
            }
            this.InvokeAsync("PrintAppraisal", new object[] {
                        appraisalNo,
                        path}, this.PrintAppraisalOperationCompleted, userState);
        }
        
        private void OnPrintAppraisalOperationCompleted(object arg) {
            if ((this.PrintAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintAppraisalCompleted(this, new PrintAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:PrintIncident", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="PrintIncident_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintIncident(string incidentNo, string path) {
            object[] results = this.Invoke("PrintIncident", new object[] {
                        incidentNo,
                        path});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintIncidentAsync(string incidentNo, string path) {
            this.PrintIncidentAsync(incidentNo, path, null);
        }
        
        /// <remarks/>
        public void PrintIncidentAsync(string incidentNo, string path, object userState) {
            if ((this.PrintIncidentOperationCompleted == null)) {
                this.PrintIncidentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintIncidentOperationCompleted);
            }
            this.InvokeAsync("PrintIncident", new object[] {
                        incidentNo,
                        path}, this.PrintIncidentOperationCompleted, userState);
        }
        
        private void OnPrintIncidentOperationCompleted(object arg) {
            if ((this.PrintIncidentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintIncidentCompleted(this, new PrintIncidentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:PrintLeave", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="PrintLeave_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintLeave(string appCode, string path) {
            object[] results = this.Invoke("PrintLeave", new object[] {
                        appCode,
                        path});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintLeaveAsync(string appCode, string path) {
            this.PrintLeaveAsync(appCode, path, null);
        }
        
        /// <remarks/>
        public void PrintLeaveAsync(string appCode, string path, object userState) {
            if ((this.PrintLeaveOperationCompleted == null)) {
                this.PrintLeaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintLeaveOperationCompleted);
            }
            this.InvokeAsync("PrintLeave", new object[] {
                        appCode,
                        path}, this.PrintLeaveOperationCompleted, userState);
        }
        
        private void OnPrintLeaveOperationCompleted(object arg) {
            if ((this.PrintLeaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintLeaveCompleted(this, new PrintLeaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:PrintLoanSchedule", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="PrintLoanSchedule_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintLoanSchedule(string employeeNo, string loanAppNo, string path) {
            object[] results = this.Invoke("PrintLoanSchedule", new object[] {
                        employeeNo,
                        loanAppNo,
                        path});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintLoanScheduleAsync(string employeeNo, string loanAppNo, string path) {
            this.PrintLoanScheduleAsync(employeeNo, loanAppNo, path, null);
        }
        
        /// <remarks/>
        public void PrintLoanScheduleAsync(string employeeNo, string loanAppNo, string path, object userState) {
            if ((this.PrintLoanScheduleOperationCompleted == null)) {
                this.PrintLoanScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintLoanScheduleOperationCompleted);
            }
            this.InvokeAsync("PrintLoanSchedule", new object[] {
                        employeeNo,
                        loanAppNo,
                        path}, this.PrintLoanScheduleOperationCompleted, userState);
        }
        
        private void OnPrintLoanScheduleOperationCompleted(object arg) {
            if ((this.PrintLoanScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintLoanScheduleCompleted(this, new PrintLoanScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:PrintP9", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="PrintP9_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintP9(string employeeNo, string path, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate) {
            object[] results = this.Invoke("PrintP9", new object[] {
                        employeeNo,
                        path,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintP9Async(string employeeNo, string path, System.DateTime startDate, System.DateTime endDate) {
            this.PrintP9Async(employeeNo, path, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void PrintP9Async(string employeeNo, string path, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.PrintP9OperationCompleted == null)) {
                this.PrintP9OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintP9OperationCompleted);
            }
            this.InvokeAsync("PrintP9", new object[] {
                        employeeNo,
                        path,
                        startDate,
                        endDate}, this.PrintP9OperationCompleted, userState);
        }
        
        private void OnPrintP9OperationCompleted(object arg) {
            if ((this.PrintP9Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintP9Completed(this, new PrintP9CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:PrintPaySlip", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="PrintPaySlip_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintPaySlip(string employeeNo, string path, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime period) {
            object[] results = this.Invoke("PrintPaySlip", new object[] {
                        employeeNo,
                        path,
                        period});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintPaySlipAsync(string employeeNo, string path, System.DateTime period) {
            this.PrintPaySlipAsync(employeeNo, path, period, null);
        }
        
        /// <remarks/>
        public void PrintPaySlipAsync(string employeeNo, string path, System.DateTime period, object userState) {
            if ((this.PrintPaySlipOperationCompleted == null)) {
                this.PrintPaySlipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintPaySlipOperationCompleted);
            }
            this.InvokeAsync("PrintPaySlip", new object[] {
                        employeeNo,
                        path,
                        period}, this.PrintPaySlipOperationCompleted, userState);
        }
        
        private void OnPrintPaySlipOperationCompleted(object arg) {
            if ((this.PrintPaySlipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintPaySlipCompleted(this, new PrintPaySlipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:PrintPayments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="PrintPayments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintPayments(string docNo, string path) {
            object[] results = this.Invoke("PrintPayments", new object[] {
                        docNo,
                        path});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintPaymentsAsync(string docNo, string path) {
            this.PrintPaymentsAsync(docNo, path, null);
        }
        
        /// <remarks/>
        public void PrintPaymentsAsync(string docNo, string path, object userState) {
            if ((this.PrintPaymentsOperationCompleted == null)) {
                this.PrintPaymentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintPaymentsOperationCompleted);
            }
            this.InvokeAsync("PrintPayments", new object[] {
                        docNo,
                        path}, this.PrintPaymentsOperationCompleted, userState);
        }
        
        private void OnPrintPaymentsOperationCompleted(object arg) {
            if ((this.PrintPaymentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintPaymentsCompleted(this, new PrintPaymentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:PrintProcurementDocs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="PrintProcurementDocs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintProcurementDocs(string docNo, string path) {
            object[] results = this.Invoke("PrintProcurementDocs", new object[] {
                        docNo,
                        path});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintProcurementDocsAsync(string docNo, string path) {
            this.PrintProcurementDocsAsync(docNo, path, null);
        }
        
        /// <remarks/>
        public void PrintProcurementDocsAsync(string docNo, string path, object userState) {
            if ((this.PrintProcurementDocsOperationCompleted == null)) {
                this.PrintProcurementDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintProcurementDocsOperationCompleted);
            }
            this.InvokeAsync("PrintProcurementDocs", new object[] {
                        docNo,
                        path}, this.PrintProcurementDocsOperationCompleted, userState);
        }
        
        private void OnPrintProcurementDocsOperationCompleted(object arg) {
            if ((this.PrintProcurementDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintProcurementDocsCompleted(this, new PrintProcurementDocsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:PrintRequisitions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="PrintRequisitions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintRequisitions(string docNo, string path) {
            object[] results = this.Invoke("PrintRequisitions", new object[] {
                        docNo,
                        path});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintRequisitionsAsync(string docNo, string path) {
            this.PrintRequisitionsAsync(docNo, path, null);
        }
        
        /// <remarks/>
        public void PrintRequisitionsAsync(string docNo, string path, object userState) {
            if ((this.PrintRequisitionsOperationCompleted == null)) {
                this.PrintRequisitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintRequisitionsOperationCompleted);
            }
            this.InvokeAsync("PrintRequisitions", new object[] {
                        docNo,
                        path}, this.PrintRequisitionsOperationCompleted, userState);
        }
        
        private void OnPrintRequisitionsOperationCompleted(object arg) {
            if ((this.PrintRequisitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintRequisitionsCompleted(this, new PrintRequisitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:PrintSurvey", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="PrintSurvey_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintSurvey(string surveyNo, string path) {
            object[] results = this.Invoke("PrintSurvey", new object[] {
                        surveyNo,
                        path});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintSurveyAsync(string surveyNo, string path) {
            this.PrintSurveyAsync(surveyNo, path, null);
        }
        
        /// <remarks/>
        public void PrintSurveyAsync(string surveyNo, string path, object userState) {
            if ((this.PrintSurveyOperationCompleted == null)) {
                this.PrintSurveyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintSurveyOperationCompleted);
            }
            this.InvokeAsync("PrintSurvey", new object[] {
                        surveyNo,
                        path}, this.PrintSurveyOperationCompleted, userState);
        }
        
        private void OnPrintSurveyOperationCompleted(object arg) {
            if ((this.PrintSurveyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintSurveyCompleted(this, new PrintSurveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:PrintTraining", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="PrintTraining_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintTraining(string appCode, string path) {
            object[] results = this.Invoke("PrintTraining", new object[] {
                        appCode,
                        path});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintTrainingAsync(string appCode, string path) {
            this.PrintTrainingAsync(appCode, path, null);
        }
        
        /// <remarks/>
        public void PrintTrainingAsync(string appCode, string path, object userState) {
            if ((this.PrintTrainingOperationCompleted == null)) {
                this.PrintTrainingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintTrainingOperationCompleted);
            }
            this.InvokeAsync("PrintTraining", new object[] {
                        appCode,
                        path}, this.PrintTrainingOperationCompleted, userState);
        }
        
        private void OnPrintTrainingOperationCompleted(object arg) {
            if ((this.PrintTrainingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintTrainingCompleted(this, new PrintTrainingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:PrintTransport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="PrintTransport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintTransport(string appCode, string path) {
            object[] results = this.Invoke("PrintTransport", new object[] {
                        appCode,
                        path});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintTransportAsync(string appCode, string path) {
            this.PrintTransportAsync(appCode, path, null);
        }
        
        /// <remarks/>
        public void PrintTransportAsync(string appCode, string path, object userState) {
            if ((this.PrintTransportOperationCompleted == null)) {
                this.PrintTransportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintTransportOperationCompleted);
            }
            this.InvokeAsync("PrintTransport", new object[] {
                        appCode,
                        path}, this.PrintTransportOperationCompleted, userState);
        }
        
        private void OnPrintTransportOperationCompleted(object arg) {
            if ((this.PrintTransportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintTransportCompleted(this, new PrintTransportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:RejectRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="RejectRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RejectRequest(string documentNo, string approverID) {
            this.Invoke("RejectRequest", new object[] {
                        documentNo,
                        approverID});
        }
        
        /// <remarks/>
        public void RejectRequestAsync(string documentNo, string approverID) {
            this.RejectRequestAsync(documentNo, approverID, null);
        }
        
        /// <remarks/>
        public void RejectRequestAsync(string documentNo, string approverID, object userState) {
            if ((this.RejectRequestOperationCompleted == null)) {
                this.RejectRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectRequestOperationCompleted);
            }
            this.InvokeAsync("RejectRequest", new object[] {
                        documentNo,
                        approverID}, this.RejectRequestOperationCompleted, userState);
        }
        
        private void OnRejectRequestOperationCompleted(object arg) {
            if ((this.RejectRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:SendIncident", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="SendIncident_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendIncident(string incidentNo) {
            this.Invoke("SendIncident", new object[] {
                        incidentNo});
        }
        
        /// <remarks/>
        public void SendIncidentAsync(string incidentNo) {
            this.SendIncidentAsync(incidentNo, null);
        }
        
        /// <remarks/>
        public void SendIncidentAsync(string incidentNo, object userState) {
            if ((this.SendIncidentOperationCompleted == null)) {
                this.SendIncidentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendIncidentOperationCompleted);
            }
            this.InvokeAsync("SendIncident", new object[] {
                        incidentNo}, this.SendIncidentOperationCompleted, userState);
        }
        
        private void OnSendIncidentOperationCompleted(object arg) {
            if ((this.SendIncidentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendIncidentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:SendLeaveApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="SendLeaveApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendLeaveApproval(string docNo) {
            this.Invoke("SendLeaveApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendLeaveApprovalAsync(string docNo) {
            this.SendLeaveApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendLeaveApprovalAsync(string docNo, object userState) {
            if ((this.SendLeaveApprovalOperationCompleted == null)) {
                this.SendLeaveApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendLeaveApprovalOperationCompleted);
            }
            this.InvokeAsync("SendLeaveApproval", new object[] {
                        docNo}, this.SendLeaveApprovalOperationCompleted, userState);
        }
        
        private void OnSendLeaveApprovalOperationCompleted(object arg) {
            if ((this.SendLeaveApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendLeaveApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:SendLoanApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="SendLoanApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendLoanApproval(string docNo) {
            this.Invoke("SendLoanApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendLoanApprovalAsync(string docNo) {
            this.SendLoanApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendLoanApprovalAsync(string docNo, object userState) {
            if ((this.SendLoanApprovalOperationCompleted == null)) {
                this.SendLoanApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendLoanApprovalOperationCompleted);
            }
            this.InvokeAsync("SendLoanApproval", new object[] {
                        docNo}, this.SendLoanApprovalOperationCompleted, userState);
        }
        
        private void OnSendLoanApprovalOperationCompleted(object arg) {
            if ((this.SendLoanApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendLoanApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:SendPaymentsApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="SendPaymentsApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendPaymentsApproval(string docNo) {
            object[] results = this.Invoke("SendPaymentsApproval", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendPaymentsApprovalAsync(string docNo) {
            this.SendPaymentsApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendPaymentsApprovalAsync(string docNo, object userState) {
            if ((this.SendPaymentsApprovalOperationCompleted == null)) {
                this.SendPaymentsApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPaymentsApprovalOperationCompleted);
            }
            this.InvokeAsync("SendPaymentsApproval", new object[] {
                        docNo}, this.SendPaymentsApprovalOperationCompleted, userState);
        }
        
        private void OnSendPaymentsApprovalOperationCompleted(object arg) {
            if ((this.SendPaymentsApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPaymentsApprovalCompleted(this, new SendPaymentsApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:SendRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="SendRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendRequisitionApproval(string docNo) {
            this.Invoke("SendRequisitionApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendRequisitionApprovalAsync(string docNo) {
            this.SendRequisitionApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendRequisitionApprovalAsync(string docNo, object userState) {
            if ((this.SendRequisitionApprovalOperationCompleted == null)) {
                this.SendRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendRequisitionApproval", new object[] {
                        docNo}, this.SendRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnSendRequisitionApprovalOperationCompleted(object arg) {
            if ((this.SendRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRequisitionApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:SendReviewAppraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="SendReviewAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendReviewAppraisal(string appraisalNo) {
            this.Invoke("SendReviewAppraisal", new object[] {
                        appraisalNo});
        }
        
        /// <remarks/>
        public void SendReviewAppraisalAsync(string appraisalNo) {
            this.SendReviewAppraisalAsync(appraisalNo, null);
        }
        
        /// <remarks/>
        public void SendReviewAppraisalAsync(string appraisalNo, object userState) {
            if ((this.SendReviewAppraisalOperationCompleted == null)) {
                this.SendReviewAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendReviewAppraisalOperationCompleted);
            }
            this.InvokeAsync("SendReviewAppraisal", new object[] {
                        appraisalNo}, this.SendReviewAppraisalOperationCompleted, userState);
        }
        
        private void OnSendReviewAppraisalOperationCompleted(object arg) {
            if ((this.SendReviewAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendReviewAppraisalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:SendRiskSurvey", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="SendRiskSurvey_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendRiskSurvey(string docNo) {
            this.Invoke("SendRiskSurvey", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendRiskSurveyAsync(string docNo) {
            this.SendRiskSurveyAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendRiskSurveyAsync(string docNo, object userState) {
            if ((this.SendRiskSurveyOperationCompleted == null)) {
                this.SendRiskSurveyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRiskSurveyOperationCompleted);
            }
            this.InvokeAsync("SendRiskSurvey", new object[] {
                        docNo}, this.SendRiskSurveyOperationCompleted, userState);
        }
        
        private void OnSendRiskSurveyOperationCompleted(object arg) {
            if ((this.SendRiskSurveyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRiskSurveyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:SendRisk", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="SendRisk_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendRisk(string riskNo) {
            this.Invoke("SendRisk", new object[] {
                        riskNo});
        }
        
        /// <remarks/>
        public void SendRiskAsync(string riskNo) {
            this.SendRiskAsync(riskNo, null);
        }
        
        /// <remarks/>
        public void SendRiskAsync(string riskNo, object userState) {
            if ((this.SendRiskOperationCompleted == null)) {
                this.SendRiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRiskOperationCompleted);
            }
            this.InvokeAsync("SendRisk", new object[] {
                        riskNo}, this.SendRiskOperationCompleted, userState);
        }
        
        private void OnSendRiskOperationCompleted(object arg) {
            if ((this.SendRiskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRiskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:SendTrainingRequestApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="SendTrainingRequestApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendTrainingRequestApproval(string docNo) {
            this.Invoke("SendTrainingRequestApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendTrainingRequestApprovalAsync(string docNo) {
            this.SendTrainingRequestApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendTrainingRequestApprovalAsync(string docNo, object userState) {
            if ((this.SendTrainingRequestApprovalOperationCompleted == null)) {
                this.SendTrainingRequestApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTrainingRequestApprovalOperationCompleted);
            }
            this.InvokeAsync("SendTrainingRequestApproval", new object[] {
                        docNo}, this.SendTrainingRequestApprovalOperationCompleted, userState);
        }
        
        private void OnSendTrainingRequestApprovalOperationCompleted(object arg) {
            if ((this.SendTrainingRequestApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTrainingRequestApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:SendTransportApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="SendTransportApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendTransportApproval(string docNo) {
            this.Invoke("SendTransportApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendTransportApprovalAsync(string docNo) {
            this.SendTransportApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendTransportApprovalAsync(string docNo, object userState) {
            if ((this.SendTransportApprovalOperationCompleted == null)) {
                this.SendTransportApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTransportApprovalOperationCompleted);
            }
            this.InvokeAsync("SendTransportApproval", new object[] {
                        docNo}, this.SendTransportApprovalOperationCompleted, userState);
        }
        
        private void OnSendTransportApprovalOperationCompleted(object arg) {
            if ((this.SendTransportApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTransportApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:SetPictureStream", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="SetPictureStream_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetPictureStream(string memberNo, string ext, string path) {
            this.Invoke("SetPictureStream", new object[] {
                        memberNo,
                        ext,
                        path});
        }
        
        /// <remarks/>
        public void SetPictureStreamAsync(string memberNo, string ext, string path) {
            this.SetPictureStreamAsync(memberNo, ext, path, null);
        }
        
        /// <remarks/>
        public void SetPictureStreamAsync(string memberNo, string ext, string path, object userState) {
            if ((this.SetPictureStreamOperationCompleted == null)) {
                this.SetPictureStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPictureStreamOperationCompleted);
            }
            this.InvokeAsync("SetPictureStream", new object[] {
                        memberNo,
                        ext,
                        path}, this.SetPictureStreamOperationCompleted, userState);
        }
        
        private void OnSetPictureStreamOperationCompleted(object arg) {
            if ((this.SetPictureStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPictureStreamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:SubmitApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="SubmitApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitApplication(string applicationNo) {
            this.Invoke("SubmitApplication", new object[] {
                        applicationNo});
        }
        
        /// <remarks/>
        public void SubmitApplicationAsync(string applicationNo) {
            this.SubmitApplicationAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void SubmitApplicationAsync(string applicationNo, object userState) {
            if ((this.SubmitApplicationOperationCompleted == null)) {
                this.SubmitApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitApplicationOperationCompleted);
            }
            this.InvokeAsync("SubmitApplication", new object[] {
                        applicationNo}, this.SubmitApplicationOperationCompleted, userState);
        }
        
        private void OnSubmitApplicationOperationCompleted(object arg) {
            if ((this.SubmitApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitApplicationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:UpdateApprovalEntries", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="UpdateApprovalEntries_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateApprovalEntries(string docNo, string senderID) {
            this.Invoke("UpdateApprovalEntries", new object[] {
                        docNo,
                        senderID});
        }
        
        /// <remarks/>
        public void UpdateApprovalEntriesAsync(string docNo, string senderID) {
            this.UpdateApprovalEntriesAsync(docNo, senderID, null);
        }
        
        /// <remarks/>
        public void UpdateApprovalEntriesAsync(string docNo, string senderID, object userState) {
            if ((this.UpdateApprovalEntriesOperationCompleted == null)) {
                this.UpdateApprovalEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApprovalEntriesOperationCompleted);
            }
            this.InvokeAsync("UpdateApprovalEntries", new object[] {
                        docNo,
                        senderID}, this.UpdateApprovalEntriesOperationCompleted, userState);
        }
        
        private void OnUpdateApprovalEntriesOperationCompleted(object arg) {
            if ((this.UpdateApprovalEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApprovalEntriesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:UploadApplicantDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="UploadApplicantDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UploadApplicantDocument(string docID, string filePath, string docType) {
            object[] results = this.Invoke("UploadApplicantDocument", new object[] {
                        docID,
                        filePath,
                        docType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadApplicantDocumentAsync(string docID, string filePath, string docType) {
            this.UploadApplicantDocumentAsync(docID, filePath, docType, null);
        }
        
        /// <remarks/>
        public void UploadApplicantDocumentAsync(string docID, string filePath, string docType, object userState) {
            if ((this.UploadApplicantDocumentOperationCompleted == null)) {
                this.UploadApplicantDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadApplicantDocumentOperationCompleted);
            }
            this.InvokeAsync("UploadApplicantDocument", new object[] {
                        docID,
                        filePath,
                        docType}, this.UploadApplicantDocumentOperationCompleted, userState);
        }
        
        private void OnUploadApplicantDocumentOperationCompleted(object arg) {
            if ((this.UploadApplicantDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadApplicantDocumentCompleted(this, new UploadApplicantDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:UploadProcurementDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="UploadProcurementDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UploadProcurementDocument(string prospectID, string refNo, string filePath) {
            object[] results = this.Invoke("UploadProcurementDocument", new object[] {
                        prospectID,
                        refNo,
                        filePath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadProcurementDocumentAsync(string prospectID, string refNo, string filePath) {
            this.UploadProcurementDocumentAsync(prospectID, refNo, filePath, null);
        }
        
        /// <remarks/>
        public void UploadProcurementDocumentAsync(string prospectID, string refNo, string filePath, object userState) {
            if ((this.UploadProcurementDocumentOperationCompleted == null)) {
                this.UploadProcurementDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadProcurementDocumentOperationCompleted);
            }
            this.InvokeAsync("UploadProcurementDocument", new object[] {
                        prospectID,
                        refNo,
                        filePath}, this.UploadProcurementDocumentOperationCompleted, userState);
        }
        
        private void OnUploadProcurementDocumentOperationCompleted(object arg) {
            if ((this.UploadProcurementDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadProcurementDocumentCompleted(this, new UploadProcurementDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/OnlinePortal:UploadRFQDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", ResponseElementName="UploadRFQDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/OnlinePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UploadRFQDocument(string vendorNo, string refNo, string filePath) {
            object[] results = this.Invoke("UploadRFQDocument", new object[] {
                        vendorNo,
                        refNo,
                        filePath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadRFQDocumentAsync(string vendorNo, string refNo, string filePath) {
            this.UploadRFQDocumentAsync(vendorNo, refNo, filePath, null);
        }
        
        /// <remarks/>
        public void UploadRFQDocumentAsync(string vendorNo, string refNo, string filePath, object userState) {
            if ((this.UploadRFQDocumentOperationCompleted == null)) {
                this.UploadRFQDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadRFQDocumentOperationCompleted);
            }
            this.InvokeAsync("UploadRFQDocument", new object[] {
                        vendorNo,
                        refNo,
                        filePath}, this.UploadRFQDocumentOperationCompleted, userState);
        }
        
        private void OnUploadRFQDocumentOperationCompleted(object arg) {
            if ((this.UploadRFQDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadRFQDocumentCompleted(this, new UploadRFQDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ApproveRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AttachDocumentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CalculateAgeCompletedEventHandler(object sender, CalculateAgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateAgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateAgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CancelAppraisalApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CancelLeaveApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CancelLoanApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CancelPaymentsApprovalCompletedEventHandler(object sender, CancelPaymentsApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelPaymentsApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelPaymentsApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CancelRequisitionApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CancelTrainingRequestApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CancelTransportApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ConfirmFundsReceiptCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CopyDocumentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateInternalRequestLineCompletedEventHandler(object sender, CreateInternalRequestLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateInternalRequestLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateInternalRequestLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DelegateRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ExecuteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ExportPicturesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnAttachmentCompletedEventHandler(object sender, FnAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetEmpIDFromUserIDCompletedEventHandler(object sender, GetEmpIDFromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmpIDFromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmpIDFromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetFileExtensionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPictureStreamCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUserIDFromEmpIDCompletedEventHandler(object sender, GetUserIDFromEmpIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserIDFromEmpIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserIDFromEmpIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ImportPicturesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LeaveExistsCompletedEventHandler(object sender, LeaveExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LeaveExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LeaveExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void MemberStatementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PrintAppraisalObjectivesCompletedEventHandler(object sender, PrintAppraisalObjectivesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintAppraisalObjectivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintAppraisalObjectivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PrintAppraisalCompletedEventHandler(object sender, PrintAppraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintAppraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintAppraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PrintIncidentCompletedEventHandler(object sender, PrintIncidentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintIncidentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintIncidentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PrintLeaveCompletedEventHandler(object sender, PrintLeaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintLeaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintLeaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PrintLoanScheduleCompletedEventHandler(object sender, PrintLoanScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintLoanScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintLoanScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PrintP9CompletedEventHandler(object sender, PrintP9CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintP9CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintP9CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PrintPaySlipCompletedEventHandler(object sender, PrintPaySlipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintPaySlipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintPaySlipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PrintPaymentsCompletedEventHandler(object sender, PrintPaymentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PrintProcurementDocsCompletedEventHandler(object sender, PrintProcurementDocsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintProcurementDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintProcurementDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PrintRequisitionsCompletedEventHandler(object sender, PrintRequisitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintRequisitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintRequisitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PrintSurveyCompletedEventHandler(object sender, PrintSurveyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintSurveyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintSurveyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PrintTrainingCompletedEventHandler(object sender, PrintTrainingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintTrainingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintTrainingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PrintTransportCompletedEventHandler(object sender, PrintTransportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintTransportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintTransportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RejectRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendIncidentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendLeaveApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendLoanApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendPaymentsApprovalCompletedEventHandler(object sender, SendPaymentsApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPaymentsApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPaymentsApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendRequisitionApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendReviewAppraisalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendRiskSurveyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendRiskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendTrainingRequestApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendTransportApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetPictureStreamCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SubmitApplicationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateApprovalEntriesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UploadApplicantDocumentCompletedEventHandler(object sender, UploadApplicantDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadApplicantDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadApplicantDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UploadProcurementDocumentCompletedEventHandler(object sender, UploadProcurementDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadProcurementDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadProcurementDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UploadRFQDocumentCompletedEventHandler(object sender, UploadRFQDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadRFQDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadRFQDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591